openapi: 3.0.3
info:
  title: Entertainment
  version: '2.0'
  contact:
    email: jmarroyave.compsci@gmail.com
    name: jmarroyave
  description: API for accessing a catalog of entertainment options available
servers:
  - url: 'http://localhost:8080/series/2.0/api'
paths:
  /dashboard/home:
    get:
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardHome'
      operationId: DashboardHome
      description: Returns the dashboard for the home page
      summary: DashboardHome
    parameters: []
  /dashboard/movies:
    get:
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardMovies'
      operationId: DashboardMovies
      description: Returns the dashboard for the movies page
      summary: DashboardMovies
    parameters: []
  /dashboard/podcasts:
    get:
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardPodcasts'
      operationId: DashboardPodcasts
      description: Returns the dashboard for the podcasts page
      summary: DashboardPodcasts
    parameters: []
  /dashboard/people:
    get:
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardPeople'
      operationId: DashboardPeople
      description: Returns the dashboard for the people page
      summary: DashboardPeople
    parameters: []
  /dashboard/tv-shows:
    get:
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardTVShows'
      operationId: DashboardTVShows
      description: Returns the dashboard for the tv page
      summary: DashboardTVShows
    parameters: []
  /dashboard/tv-shows-episodes:
    get:
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardTVShowEpisodes'
      operationId: DashboardTVShowEpisodes
      description: Returns the dashboard for the tv page
      summary: DashboardTVShowsEpisodes
    parameters: []
  /dashboard/movies-festivals:
    get:
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardMoviesFestivals'
      operationId: DashboardMovieFestivals
      description: Returns the dashboard for the movies festivals
      summary: DashboardMoviesFestivals
    parameters: []
  /dashboard/video-games:
    get:
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardVideoGames'
      operationId: DashboardVideoGames
      description: Returns the dashboard for the games page
      summary: DashboardVideoGames
    parameters: []
  /movies:
    get:
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Movie'
      operationId: Movies
      description: return the movies
      summary: Movies
      parameters:
        - schema:
            type: integer
          in: query
          name: page
          description: page
        - schema:
            type: string
          in: query
          name: field
          description: field
        - schema:
            type: string
          in: query
          name: value
          description: value
        - schema:
            type: integer
          in: query
          name: limit
          description: limit
    parameters: []
  '/movies/{id}':
    get:
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Movie'
      operationId: Movie
      description: 'return the movie with {id}'
      summary: Movie
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: id
  /movie-festivals:
    get:
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MovieFestival'
      operationId: MovieFestivals
      description: 'return the movie festivals '
      summary: MovieFestivals
      parameters:
        - schema:
            type: integer
          in: query
          name: page
          description: page
        - schema:
            type: string
          in: query
          name: field
          description: field
        - schema:
            type: string
          in: query
          name: limit
          description: limit
    parameters: []
  '/movie-festivals/{id}':
    get:
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MovieFestival'
      description: 'return the movie festivals '
      summary: MovieFestival
      operationId: MovieFestival
      parameters: []
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: id
  /tv-shows:
    get:
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TVShow'
      operationId: tvShows
      description: 'return the movie festivals '
      summary: TVShows
      parameters:
        - schema:
            type: integer
          in: query
          name: page
          description: page
        - schema:
            type: string
          in: query
          name: field
          description: field
        - schema:
            type: string
          in: query
          name: value
          description: value
        - schema:
            type: integer
          in: query
          name: limit
          description: limit
    parameters: []
  '/tv-shows/lists/':
    get:
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items: 
                  type: object
                  properties:
                    items:
                      type: array
                      items:
                        $ref: '#/components/schemas/Entity'
                    ref:
                      type: string
                    name:
                      type: string
      description: 'return the lists '
      summary: TVShowLists
      operationId: tvShowLists
      parameters:
        - schema:
            type: string
          name: lists
          in: query
          required: true
          description: 'list names array: soon, popular, etc'
        - schema:
            type: integer
          in: query
          name: page
        - schema:
            type: boolean
          in: query
          name: shuffle
        - schema:
            type: integer
          in: query
          name: limit
  '/tv-shows/list/{list}':
    get:
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Entity'
                  ref:
                    type: string
                  name:
                    type: string
      description: 'return the movie festivals '
      summary: TVShowList
      operationId: tvShowList
      parameters:
        - schema:
            type: integer
          in: query
          name: page
        - schema:
            type: boolean
          in: query
          name: shuffle
        - schema:
            type: integer
          in: query
          name: limit
    parameters:
      - schema:
          type: string
        name: list
        in: path
        required: true
        description: 'list name: soon, popular, etc'
  '/tv-shows/{id}':
    get:
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TVShow'
      description: 'return the movie festivals '
      summary: TVShow
      operationId: tvShowItem
      parameters: []
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: id
  '/tv-shows/episode/{id}':
    get:
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Entity'
      description: return tv show episodes
      summary: TVShowEpisode
      operationId: TVShowEpisode
      parameters: []
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
  /video-games:
    get:
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VideoGame'
      operationId: VideoGames
      description: return the video games
      summary: VideoGames
      parameters:
        - schema:
            type: integer
          in: query
          name: page
          description: page
        - schema:
            type: string
          in: query
          name: field
          description: field
        - schema:
            type: string
          in: query
          name: value
          description: value
        - schema:
            type: integer
          in: query
          name: limit
          description: limit
    parameters: []
  '/video-games/{id}':
    get:
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VideoGame'
      description: return the video game
      summary: VideoGame
      operationId: VideoGame
      parameters: []
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: id
  /podcasts:
    get:
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Podcast'
      operationId: Podcasts
      description: 'returns the podcast with {id}'
      summary: Podcasts
      parameters:
        - schema:
            type: integer
          in: query
          name: page
          description: page
        - schema:
            type: string
          in: query
          name: field
          description: field
        - schema:
            type: string
          in: query
          name: value
          description: value
        - schema:
            type: integer
          in: query
          name: limit
          description: limit
    parameters: []
  '/podcasts/{id}':
    get:
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Podcast'
      operationId: Podcast
      description: 'returns the podcast with {id}'
      summary: Podcast
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: id
  /podcasts/category/music:
    get:
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Podcast'
      operationId: MusicPodcasts
      description: returns the music category podcasts
      parameters:
        - schema:
            type: integer
          in: query
          name: page
          description: page number
      summary: PodcastsMusic
    parameters: []
  '/people/{id}':
    get:
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
      operationId: Person
      description: 'return the person with {id}'
      summary: Person
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: id
  /people:
    get:
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person'
      operationId: People
      description: return the people
      summary: People
      parameters:
        - schema:
            type: integer
          in: query
          name: page
          description: page
        - schema:
            type: string
          in: query
          name: field
          description: field
        - schema:
            type: string
          in: query
          name: value
          description: value
        - schema:
            type: integer
          in: query
          name: limit
          description: limit
        - schema:
            type: boolean
          in: query
          name: withDirected
          description: include directed
          required: true
        - schema:
            type: boolean
          in: query
          name: withActed
          description: include acted
          required: true
        - schema:
            type: boolean
          in: query
          name: withProduced
          description: include produce
          required: true
        - schema:
            type: boolean
          in: query
          name: withWrote
          description: include wrote
          required: true
    parameters: []
  /stories/movies/remakes:
    get:
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StoryMovieRemakes'
      operationId: StoryRemakes
      description: 'return the movie remakes '
      summary: StoryRemakes
      parameters:
        - schema:
            type: integer
          in: query
          name: page
          description: page
        - schema:
            type: boolean
          in: query
          name: extended
          description: extended
        - schema:
            type: integer
          in: query
          name: limit
    parameters: []
  /stories/movies/topics:
    get:
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StoryMovieTopics'
      operationId: StoryTopics
      description: 'return the movie remakes '
      summary: StoryTopics
      parameters:
        - schema:
            type: integer
          in: query
          name: page
          description: page
        - schema:
            type: string
          in: query
          name: genre
          description: genre
        - schema:
            type: string
          in: query
          name: year
          description: year
        - schema:
            type: integer
          in: query
          name: nratio
          description: neighbors ratio
    parameters: []
  '/stories/movies/topics/{topic}':
    get:
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StoryMovieTopic'
      operationId: StoryTopic
      description: 'return the info related to the topic '
      summary: StoryTopic
      parameters: []
    parameters:
      - schema:
          type: string
        name: topic
        in: path
        required: true
        description: topic
  /stories/movies/awards:
    get:
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StoryMovieAward'
      operationId: StoryAwards
      description: returns the entities with an award
      parameters:
        - schema:
            type: integer
          in: query
          name: year
          description: year
        - schema:
            type: string
          in: query
          name: festival
          description: festival id
        - schema:
            type: integer
          in: query
          name: page
          description: page number
      summary: StoryMoviesAwards
    parameters: []
  /stories/people/directors:
    get:
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person'
      operationId: StoryDirectors
      description: 'return movie directors '
      summary: StoryPeopleDirectors
      parameters:
        - schema:
            type: integer
          in: query
          name: page
          description: page
    parameters: []
  /stories/people/producers:
    get:
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person'
      operationId: StoryProducers
      description: return movie producers
      summary: StoryPeopleProducers
      parameters:
        - schema:
            type: integer
          in: query
          name: page
          description: page
    parameters: []
  /stories/people/actors:
    get:
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person'
      operationId: StoryActors
      description: return movie actors
      summary: StoryPeopleActors
      parameters:
        - schema:
            type: integer
          in: query
          name: page
          description: page
    parameters: []
  /stories/people/writers:
    get:
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person'
      operationId: StoryWriters
      description: 'return movie writers '
      summary: StoryPeopleWriters
      parameters:
        - schema:
            type: integer
          in: query
          name: page
          description: page
    parameters: []
  /search/results:
    get:
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SearchResult'
      operationId: Search
      description: return search results for query
      parameters:
        - schema:
            type: string
          in: query
          name: qry
          description: query to search
        - schema:
            type: integer
          in: query
          name: page
          description: page number
        - schema:
            type: string
          in: query
          name: entities
          description: entities to include
        - schema:
            type: integer
          in: query
          name: year
          description: year
        - schema:
            type: integer
          in: query
          name: timeframe
          description: time frame
      summary: SearchResults
    parameters: []
  /search/suggestions:
    get:
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                description: suggestion results
                properties:
                  suggestions:
                    type: array
                    items:
                      type: string
      operationId: Suggestions
      parameters:
        - schema:
            type: string
          in: query
          name: qry
          description: query to search
      description: return search suggestions for query
      summary: SearchSuggestions
  /comments:
    post:
      tags: []
      summary: post a comment
      operationId: postComment
      responses:
        '200':
          description: OK
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                text:
                  type: string
                who:
                  type: string
      description: post a comment
    put:
      tags: []
      summary: put a comment
      operationId: putComment
      responses:
        '200':
          description: OK
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                text:
                  type: string
                who:
                  type: string
      description: post a comment
    get:
      tags: []
      description: post a comment
      summary: ''
      operationId: postCommentTmp
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties: {}
      parameters:
        - schema:
            type: string
          in: query
          name: text
        - schema:
            type: string
          in: query
          name: who
        - schema:
            type: string
          in: query
          description: from
          name: from
    parameters: []
components:
  schemas:
    DashboardHome:
      type: object
      title: Home Dashboard
      properties:
        lastUpdate:
          description: Last time updated
          type: string
        people:
          $ref: '#/components/schemas/DashboardPeople'
        movies:
          $ref: '#/components/schemas/DashboardEntities'
        podcasts:
          $ref: '#/components/schemas/DashboardPodcasts'
    DashboardEntities:
      type: object
      title: Entities Dashboard
      x-internal: false
      properties:
        total:
          description: Number of movies
          type: number
        type:
          description: Distribution by type
          type: object
          additionalProperties:
            type: number
        releaseDecade:
          description: Distribution by year released
          type: object
          additionalProperties:
            type: number
        countries:
          description: Distribution by country
          type: object
          additionalProperties:
            type: number
        genres:
          description: Distribution by genre
          type: object
          additionalProperties:
            type: number
        streamBy:
          description: Distribution by streamer
          type: object
          additionalProperties:
            type: number
        ratings:
          description: Distribution by rating
          type: object
          additionalProperties:
            type: number
        duration:
          type: object
        awards:
          description: Distribution by awards
          type: object
          additionalProperties:
            type: number
        production:
          type: object
        boxOffice:
          type: object
        cast:
          type: object
        directors:
          type: object
        producers:
          type: object
        writers:
          type: object
        ratingsEntities:
          type: object
        genresByYear:
          type: object
        releasesByYear:
          type: object
        durationByYear:
          type: object
        countryByYear:
          type: object
        typeByYear:
          type: object
        boxOfficeByYear:
          type: object
        wordsByDecadeAndGenre:
          type: array
          items: {}
    DashboardMovies:
      $ref: '#/components/schemas/DashboardEntities'
    DashboardTVShows:
      $ref: '#/components/schemas/DashboardEntities'
    DashboardTVShowEpisodes:
      $ref: '#/components/schemas/DashboardEntities'
    DashboardVideoGames:
      $ref: '#/components/schemas/DashboardEntities'
    DashboardPodcasts:
      type: object
      title: Podcasts Dashboard
      description: ''
      properties:
        total:
          type: number
        languages:
          type: object
        category:
          type: object
        author:
          type: object
        countries:
          type: object
        subcategory:
          type: object
    DashboardPeople:
      type: object
      title: People Dashboard
      description: ''
      properties:
        total:
          description: Number of people
          type: number
        professions:
          description: Distribution by profession
          type: object
          additionalProperties:
            type: number
        birthYear:
          description: Distribution by birth year
          type: object
          additionalProperties:
            type: number
        birthDecade:
          type: object
        professionsPerPerson:
          type: object
        professionsByDecade:
          type: object
        awards:
          type: object
        directors:
          type: object
        producers:
          type: object
        actors:
          type: object
        writers:
          type: object
    DashboardMoviesFestivals:
      type: object
      title: Movies Festivals Dashboard
      description: ''
      properties:
        total:
          description: Number of people
          type: number
        startYear:
          type: object
        startDecade:
          type: object
        countries:
          type: object
        continent:
          type: object
        withAwards:
          type: number
        awardYear:
          type: object
        awardedByYear:
          type: object
    Person:
      type: object
      description: Person model
      title: Person
      properties:
        _id:
          type: string
        name:
          description: Name of the person
          type: string
          example: James Franco
        birthYear:
          type: string
        deathYear:
          type: string
        profession:
          type: array
          items:
            type: string
        awards:
          description: awards
          type: array
          items:
            $ref: '#/components/schemas/Award'
        created:
          type: string
        references:
          type: object
          properties:
            imdb:
              type: string
        produced:
          description: Producers of the movie
          type: array
          items:
            type: object
            properties:
              id:
                $ref: '#/components/schemas/Entity'
        directed:
          description: Directors of the movie
          type: array
          items:
            type: object
            properties:
              id:
                $ref: '#/components/schemas/Entity'
        acted:
          description: Cast of the movie
          type: array
          items:
            type: object
            properties:
              id:
                $ref: '#/components/schemas/Entity'
              as:
                type: string
        crew:
          type: array
          items:
            type: object
            properties:
              id:
                $ref: '#/components/schemas/Entity'
              as:
                type: string
              cat:
                type: string
              job:
                type: string
        wrote:
          type: array
          items:
            type: object
            properties:
              id:
                $ref: '#/components/schemas/Entity'
        directedTo:
          type: array
          items:
            type: object
            properties:
              p:
                $ref: '#/components/schemas/Person'
              'n':
                type: number
        directedBy:
          type: array
          items:
            type: object
            properties:
              p:
                $ref: '#/components/schemas/Person'
              'n':
                type: number
        actedWith:
          type: array
          items:
            type: object
            properties:
              p:
                $ref: '#/components/schemas/Person'
              'n':
                type: number
        images:
          type: object
          properties:
            avatar:
              type: string
    Entity:
      type: object
      x-internal: false
      description: Entity
      title: ''
      properties:
        _id:
          description: Id
          type: string
          example: The lord of the rings
        info:
          type: object
          properties:
            title:
              description: Title
              type: string
              example: The lord of the rings
            type:
              description: Type
              type: string
            genres:
              description: Genre
              type: array
              items:
                type: string
            country_origin:
              description: Country
              type: array
              items:
                type: string
            duration:
              description: Duration
              type: string
            classification:
              description: 'Classification [PG,PG13...]'
              type: string
            rating:
              type: number
            ratings:
              description: Rating
              type: array
              items:
                type: object
                properties:
                  source:
                    type: string
                  rating:
                    type: string
                  votes:
                    type: number
            stream_by:
              description: Rating
              type: array
              items:
                type: object
                properties:
                  name:
                    type: string
            on_air:
              description: on air dates
              type: object
              properties:
                start:
                  type: string
                start_year:
                  type: number
            boxOffice:
              type: string
            production:
              type: string
            website:
              type: string
            language:
              type: string
            plot:
              type: string
            keywords:
              type: array
              items:
                type: string
        awards:
          description: awards
          type: array
          items:
            $ref: '#/components/schemas/Award'
        people:
          type: object
          properties:
            produced:
              type: array
              items:
                $ref: '#/components/schemas/Person'
            directed:
              type: array
              items:
                $ref: '#/components/schemas/Person'
            cast:
              type: array
              items:
                $ref: '#/components/schemas/Person'
            crew:
              type: array
              items:
                $ref: '#/components/schemas/Person'
            written:
              type: array
              items:
                $ref: '#/components/schemas/Person'
            stars:
              type: array
              items:
                $ref: '#/components/schemas/Person'
        media:
          type: object
          properties:
            images:
              type: object
              properties:
                poster:
                  type: string
        lists:
          type: array
          items:
            type: object
            properties:
              ref:
                type: string
              items:
                type: array
                items:
                  $ref: '#/components/schemas/Entity'
              name:
                type: string
        episodes:
          type: object
    Movie:
      $ref: '#/components/schemas/Entity'
    VideoGame:
      $ref: '#/components/schemas/Entity'
    TVShow:
      $ref: '#/components/schemas/Entity'
    Podcast:
      type: object
      properties:
        _id:
          description: Name of the person
          type: string
          example: James Franco
        title:
          type: string
        subtitle:
          type: string
        feedUrl:
          type: string
        description:
          type: string
        summary:
          type: string
        author:
          type: string
        link:
          type: string
        language:
          type: string
        image:
          type: object
          properties:
            poster:
              type: string
        category:
          type: string
        subcategory:
          type: string
        createdDate:
          type: string
        created:
          type: string
        country:
          type: string
    MovieFestival:
      type: object
      properties:
        _id:
          type: string
        name:
          type: string
        country:
          type: string
        wiki:
          type: string
        continent:
          type: string
        startYear:
          type: string
        image:
          type: object
          properties:
            poster:
              type: string
    Award:
      type: object
      description: Award model
      properties:
        festival:
          $ref: '#/components/schemas/MovieFestival'
        year:
          type: number
        won:
          type: boolean
        film:
          type: string
        category:
          type: string
    SearchResult:
      type: object
      description: search result
      title: SearchResult
      properties:
        ty:
          type: string
        dc:
          type: object
          properties:
            id:
              type: string
            title:
              type: string
            desc:
              type: string
            thumb:
              type: string
            cats:
              type: string
            released:
              type: string
            profession:
              type: string
            year:
              type: string
        yr:
          type: integer
    StoryMovieAward:
      type: object
      description: Award model
      x-examples: {}
      properties:
        festival:
          $ref: '#/components/schemas/MovieFestival'
        year:
          type: number
        awarded:
          type: array
          items:
            type: object
            properties:
              entity:
                type: string
              category:
                type: string
              won:
                type: boolean
              entity_type:
                type: string
              entity_id:
                type: string
              film:
                type: string
              film_id:
                type: string
              film_type:
                type: string
    StoryMovieRemakes:
      type: object
      description: Remakes
      properties:
        name:
          type: string
        recs:
          type: array
          items:
            $ref: '#/components/schemas/Entity'
        count:
          type: number
    StoryMovieTopics:
      type: object
      description: topics
      properties:
        genre:
          type: string
        words:
          type: array
          items:
            type: object
            properties:
              p:
                type: string
              'n':
                type: number
        year:
          type: string
        max:
          type: number
        min:
          type: number
    StoryMovieTopic:
      type: object
      description: topics
      properties:
        genre:
          type: string
        year:
          type: number
  securitySchemes: {}
  headers: {}
  responses: {}
  parameters: {}
security: []
